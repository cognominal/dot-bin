#! /usr/bin/env perl
=pod
=head1 NAME 

gitprompt -- info about git status, current repo, current branch name for use in a shell prompt

=head1 DESCRIPTION

Make sure gitprompt is executable and accessible from your PATH.
With the bash shell, add the following line in your C<~/.profile>

  export PS1='$(gitprompt) $ '

Now on you shell prompt :

 $ source ~/.profile
 [ 134- 3? 4* rakudo/rakudo nom] $ 

Now your prompt is updated. It shows between square brackets the
current repo name as per github, a concise git status and branch name.
Here the concise git status is "134- 3? 4*", meaning 134 deleted
files, 3 untracked files and 4 modified files.  The deleted, untracked
or modified chunks are omitted if irrelevant.

The prompt reverts to show the current directory outside a git repo
hierarchy.


=cut
use feature ':5.10';
use strict;
use Slurp;

my ($home, $cwd) = @ENV{ qw( HOME PWD ) };
(my $smartCwd = $cwd) =~ s|$home|~|;


open my $fh, "git status 2>/dev/null |" or die "$!";
my ($deleted, $untracked, $modified, $trackuntracked);
for ( <$fh>) {
   /deleted:/ &&  $deleted++;
   $trackuntracked=1 if /Untracked files:/;
   $untracked++ if $trackuntracked and m/^#/;
  /modified:/ && $modified++;
}
$untracked-= 2 if $untracked;

open $fh,  'git branch --no-color 2> /dev/null | ';
my ($branch) = grep {  /\*/ } <$fh>;
$branch =~ s/\s*\*\s*(.*)\n/$1/;
$deleted = "$deleted-"     if $deleted;
$untracked = "$untracked?" if $untracked;
$modified = "$modified*"   if $modified;

my $reponm;
my $qr = qr|https://github.com/(.*)(\.git)?$|;
my $fnm = '.git/config';

my @cwd = split '/', $cwd;
for (reverse 1 .. (@cwd -1)) {
   my $s = join '/', @cwd[1..$_];
   my $path = "/$s/$fnm";
   next unless -f $path;
   my @t = grep {  /$qr/ }  slurp $path;
  ($reponm) = $t[0] =~ /$qr/;
  last;
}
if ($branch) {
    my $_ = "[ $deleted $untracked $modified $reponm $branch]";
    s/ +/ /g; # remove uneeded spaces
    print $_;
    exit 0;
}
print $smartCwd;
